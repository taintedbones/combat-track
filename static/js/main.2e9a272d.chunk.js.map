{"version":3,"sources":["ThemeProvider.ts","firebaseConfig.ts","contexts/AuthContext.tsx","hooks/useAuth.ts","hooks/useDatabase.ts","views/Combat/components/Dialogs/ConfirmationDialog.tsx","views/Combat/components/CombatSetup/SetupToolbar.tsx","components/DataTables/CombatSetupColumns.ts","components/DataTables/CombatSetupDataTable.tsx","views/Combat/components/CombatSetup/CombatSetup.tsx","views/Combat/components/Dialogs/AlertDialog.tsx","views/Combat/components/CombatStart/CombatToolbar.tsx","components/DataTables/CombatColumns.ts","components/DataTables/CombatDataTable.tsx","views/Combat/components/CombatStart/CombatStart.tsx","views/Combat/Combat.tsx","components/Navbar/components/MenuItem.ts","components/Navbar/components/Menu.tsx","components/Navbar/Navbar.tsx","components/DataTables/ActorsColumns.ts","components/DataTables/ActorsDataTable.tsx","views/EditActor/components/ActorToolbar.tsx","views/EditActor/components/AddActorForm.tsx","views/EditActor/components/EditActorForm.tsx","components/LoginMessage.tsx","views/EditActor/EditActors.tsx","components/DataTables/ScenariosColumns.ts","components/DataTables/ScenariosDataTable.tsx","views/EditScenarios/components/ScenarioToolbar.tsx","views/EditScenarios/EditScenarios.tsx","App.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","palette","background","default","paper","primary","main","light","dark","secondary","contrastText","info","warning","useStyles","makeStyles","root","backgroundColor","textAlign","minHeight","padding","color","display","flexDirection","container","width","height","marginBottom","dataGrid","fontWeight","grid","firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","database","getFirestore","AuthContext","createContext","user","signin","signinAnon","signout","AuthContextProvider","children","useState","setUser","a","auth","getAuth","provider","GoogleAuthProvider","signInWithPopup","credential","signInAnonymously","signOut","useEffect","unsubscribe","onAuthStateChanged","Provider","value","useAuth","useContext","checkUserExists","userUid","userList","getDocs","collection","forEach","doc","push","id","includes","getActorFromRef","refPath","docName","split","docRef","getDoc","snapshot","data","addUser","setDoc","uid","name","displayName","email","actors","party","scenarios","console","log","error","useActors","UseAuth","setError","loading","setLoading","setActors","fetchActors","actorsRef","q","query","where","actorsSnapshot","actorsList","docs","map","refsList","userRef","userSnapshot","customActorRefsList","get","Promise","all","actorRef","path","actor","customActorList","concat","slice","actorsIdList","idx","Object","defineProperty","useCustomActors","changeMade","setChangeMade","customActors","setCustomActors","customActorRefs","partyRefs","actorRefsList","actorList","addActor","newActor","addDoc","type","updateDoc","arrayUnion","deleteActor","deleteDoc","arrayRemove","editActor","originalActor","ac","dc","hp","notes","undefined","ConfirmationDialog","open","setOpen","onClose","handleListItemClick","Fragment","Dialog","fullWidth","maxWidth","scroll","DialogTitle","Typography","DialogContent","List","ListItem","autoFocus","button","onClick","ListItemText","DialogActions","Button","variant","CombatSetupToolbar","onStartCombat","onScenarioChange","scenarioName","onAddActor","onDeleteActor","isValidSetup","useTheme","dialogOpen","setDialogOpen","Grid","item","spacing","alignItems","xs","InputLabel","sx","Select","labelId","label","onChange","e","target","style","MenuItem","Tooltip","title","placement","disabled","columns","field","headerName","flex","headerClassName","editable","sortable","CombatSetupDataTable","onActorSelect","onCellCommit","classes","className","rows","onCellEditCommit","params","onRowClick","hideFooterPagination","CombatSetup","setIsValidSetup","setSetupActors","onCombatStart","selectedActor","setSelectedActor","row","temp","isValid","find","initiative","checkValidity","maxId","Math","max","apply","length","nextId","tempActor","filter","AlertDialog","dialog","continueClicked","handleClose","DialogContentText","CombatToolbar","onBackClicked","currentTurnName","roundNum","turnIndex","endTurn","isValidCombat","backDialogOpen","setBackDialogOpen","actorDialogOpen","setActorDialogOpen","justifyContent","CombatDataTable","turnId","selectionModel","setSelectionModel","sort","ClickAwayListener","onClickAway","getRowClassName","rowId","onSelectionModelChange","CombatStart","setCombatActors","onCombatEnd","setRoundNum","setTurnIndex","currTurnName","setCurrTurnName","currTurnId","setCurrTurnId","setIsValidCombat","sortedActors","b","updatedIndex","findIndex","nextTurnIndex","Combat","scenario","setScenario","setScenarioName","fetchScenario","scenarioSnapshot","scenarioActorRefsList","partyRefList","updateScenarioName","useScenario","combatStarted","setCombatStarted","setupActors","combatActors","direction","MenuItems","url","icon","Groups","AccessibilityNew","GridView","Info","Menu","isOpen","Drawer","anchor","Box","menuItem","index","component","Link","to","ListItemIcon","Divider","Navbar","menuOpen","setMenuOpen","login","valueOf","logout","AppBar","position","Toolbar","flexGrow","mr","isAnonymous","IconButton","size","edge","ml","DataTable","onSelect","selected","hideFooter","ActorToolbar","onAddClicked","onDeleteClicked","onEditClicked","isDisabled","box","top","left","transform","bgcolor","border","boxShadow","p","textField","select","AddActorForm","setType","custom","setActor","Modal","onSubmit","event","preventDefault","TextField","required","parseInt","EditActorForm","editedActor","setEditedActor","defaultValue","message","LoginMessage","isActors","EditActors","addTriggered","setAddTriggered","editTriggered","setEditTriggered","buttonDisabled","setButtonDisabled","alertTriggered","setAlertTriggered","refresh","setRefresh","renderAddActorForm","renderEditActorForm","renderAlert","details","users","setUsers","fetchUsers","usersCol","usersSnapshot","usersList","usersIdList","useUsers","ScenarioToolbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e9a272d.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\n/**\r\n * @dev feel free to make your own color scheme here\r\n */\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#3F403F\",\r\n      paper: \"#E6E8E6\",\r\n    },\r\n    primary: {\r\n      main: \"#9FB8AD\",\r\n      light: \"#9FB8AD\",\r\n      dark: \"#9FB8AD\",\r\n    },\r\n    secondary: {\r\n      main: \"#475841\",\r\n      light: \"#475841\",\r\n      dark: \"#343833\",\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    info: {\r\n      main: \"#CED0CE\",\r\n      light: \"#CED0CE\",\r\n      dark: \"#CED0CE\",\r\n    },\r\n    warning: {\r\n      main: \"#CC0000\",\r\n      light: \"#CC0000\",\r\n      dark: \"#CC0000\",\r\n    },\r\n  },\r\n});\r\n\r\nexport const useStyles = makeStyles(() => {\r\n  return {\r\n    root: {\r\n      backgroundColor: `${theme.palette.background.default}`,\r\n      textAlign: \"center\",\r\n      minHeight: \"calc(100vh - 100px)\",\r\n      padding: \"100px 5% 0% 5%\",\r\n      color: `${theme.palette.background.paper}`,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n    container: {\r\n      width: \"100%\",\r\n      height: \"60vh\",\r\n      marginBottom: \"5vh\",\r\n    },\r\n    dataGrid: {\r\n      backgroundColor: `${theme.palette.secondary.dark}`,\r\n      color: \"white\",\r\n      width: \"100%\",\r\n      height: \"60vh\",\r\n      \"& .col-header\": {\r\n        backgroundColor: `${theme.palette.secondary.light}`,\r\n      },\r\n      \"& .rowTheme-selected-true\": {\r\n        backgroundColor: `${theme.palette.primary.light}`,\r\n        color: `${theme.palette.warning.light}`,\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n    grid: {\r\n      height: \"80%\",\r\n    },\r\n  };\r\n});\r\n\r\nexport default theme;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// change details to be stored in env file instead of hard coded\r\nconst firebaseApp = initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: \"combat-track.firebaseapp.com\",\r\n  projectId: \"combat-track\",\r\n  storageBucket: \"combat-track.appspot.com\",\r\n  messagingSenderId: \"725526804018\",\r\n  appId: \"1:725526804018:web:ca2510bb0726889eee6e2b\"\r\n});\r\n\r\n\r\n\r\nexport const database = getFirestore(firebaseApp);\r\n","import { useState, useEffect, createContext } from \"react\";\r\nimport {\r\n  getAuth,\r\n  signInAnonymously,\r\n  signOut,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  User,\r\n} from \"firebase/auth\";\r\n\r\ninterface AuthContextProps {\r\n  user: false | User;\r\n  signin: () => Promise<User>;\r\n  signinAnon: () => Promise<User>;\r\n  signout: () => Promise<any>;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextProps>({\r\n  user: false,\r\n  signin: () => null as any,\r\n  signinAnon: () => null as any,\r\n  signout: () => null as any,\r\n});\r\n\r\n// Provider hook that creates auth object and handles state\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState<User | false>(false);\r\n  // Wrap any Firebase methods we want to use making sure ...\r\n  // ... to save the user to state.\r\n  const signin = async () => {\r\n    const auth = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    const credential = await signInWithPopup(auth, provider);\r\n    const user = credential.user;\r\n\r\n    setUser(user);\r\n    return user;\r\n  };\r\n\r\n  const signinAnon = async () => {\r\n    const auth = getAuth();\r\n    const credential = await signInAnonymously(auth);\r\n    const user = credential.user;\r\n    setUser(user);\r\n    return user;\r\n  };\r\n\r\n  const signout = async () => {\r\n    const auth = getAuth();\r\n    await signOut(auth);\r\n    setUser(false);\r\n  };\r\n\r\n  // Subscribe to user on mount\r\n  // Because this sets state in the callback it will cause any ...\r\n  // ... component that utilizes this hook to re-render with the ...\r\n  // ... latest auth object.\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser(false);\r\n      }\r\n    });\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Return the user object and auth methods\r\n  return (\r\n    <AuthContext.Provider value={{ user, signin, signinAnon, signout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n\r\n  // return {\r\n  //   user,\r\n  //   signin,\r\n  //   signinAnon,\r\n  //   signup,\r\n  //   signout,\r\n  //   sendPasswordResetEmail,\r\n  //   confirmPasswordReset,\r\n  // };\r\n};\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\n\r\nconst useAuth = () => {\r\n  const { user, signin, signinAnon, signout } = useContext(AuthContext);\r\n  return { user, signin, signinAnon, signout };\r\n};\r\n\r\nexport default useAuth;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  arrayUnion,\r\n  arrayRemove,\r\n  collection,\r\n  addDoc,\r\n  deleteDoc,\r\n  getDocs,\r\n  getDoc,\r\n  setDoc,\r\n  doc,\r\n  DocumentData,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from 'firebase/firestore/';\r\nimport { database } from '../firebaseConfig';\r\nimport { User } from '@firebase/auth';\r\nimport UseAuth from '../hooks/useAuth';\r\n\r\ninterface Actor {\r\n  name: string;\r\n  ac: number;\r\n  dc: number;\r\n  hp: number;\r\n  initiative: number;\r\n  notes: string;\r\n  type: string;\r\n  custom: boolean;\r\n}\r\n\r\nexport const checkUserExists = async (userUid) => {\r\n  let userList: any[] = [];\r\n  const snapshot = await getDocs(collection(database, 'users'));\r\n  snapshot.forEach((doc) => userList.push(doc.id));\r\n  return userList.includes(userUid);\r\n};\r\n\r\nasync function getListOfScenarios() {\r\n  const { user } = UseAuth();\r\n  const scenariosRef = collection(database, 'scenarios');\r\n  const q = query(scenariosRef, where('custom', '==', false));\r\n  const scenariosSnapshot = await getDocs(q);\r\n\r\n  let scenarioList: any[] = [];\r\n  scenariosSnapshot.forEach((doc) => scenarioList.push(doc.id));\r\n\r\n  // if (user !== false) {\r\n  //   const userRef = doc(database, 'users', user.uid);\r\n  //   const userSnapshot = await getDoc(userRef);\r\n  //   const customScenarioRefs = userSnapshot.get('scenarios');\r\n  //   customScenarioRefs.forEach((doc) => {\r\n\r\n  //   });\r\n  // }\r\n\r\n  return scenarioList;\r\n}\r\n\r\nexport const getListOfCustomScenarios = async () => {\r\n  const { user } = UseAuth();\r\n  let scenarioList: any[] = [];\r\n\r\n  if (user !== false) {\r\n    const userRef = doc(database, 'users', user.uid);\r\n    const userSnapshot = await getDoc(userRef);\r\n    const customScenarioRefs = userSnapshot.get('scenarios');\r\n\r\n    customScenarioRefs.forEach(async (scenarioRef) => {\r\n      try {\r\n        const scenario = await getScenarioFromRef(scenarioRef.path);\r\n        if (scenario !== undefined) {\r\n          scenarioList.push({ name: scenario.name, doc: scenarioRef.path });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  return scenarioList;\r\n};\r\n\r\nasync function getActorFromRef(refPath) {\r\n  const docName = refPath.split('/')[1];\r\n  const docRef = doc(database, 'actors', docName);\r\n  const snapshot = await getDoc(docRef);\r\n  return snapshot.data();\r\n}\r\n\r\nasync function getScenarioFromRef(refPath) {\r\n  const docName = refPath.split('/')[1];\r\n  const docRef = doc(database, 'scenarios', docName);\r\n  const snapshot = await getDoc(docRef);\r\n  return snapshot.data();\r\n}\r\n\r\n// get array of party member objects\r\nasync function getParty(userId) {\r\n  const docRef = doc(database, 'users', userId);\r\n  const snapshot = await getDoc(docRef);\r\n  const partyRefList = snapshot.get('party');\r\n\r\n  const actorList = await Promise.all(\r\n    partyRefList.map(async (actorRef, idx) => {\r\n      try {\r\n        const actor = await getActorFromRef(actorRef.path);\r\n        return {\r\n          ...actor,\r\n          id: idx,\r\n          doc: actorRef.path.split('/')[1],\r\n        };\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })\r\n  );\r\n\r\n  return actorList;\r\n}\r\n\r\nexport const addUser = async (user: User) => {\r\n  try {\r\n    await setDoc(doc(database, 'users', user.uid), {\r\n      name: user.displayName,\r\n      email: user.email,\r\n      actors: [],\r\n      party: [],\r\n      scenarios: [],\r\n    });\r\n    console.log(user.displayName, ' successfully added to users!');\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const useActors = () => {\r\n  const { user } = UseAuth();\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [actors, setActors] = useState<DocumentData[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchActors = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const actorsRef = collection(database, 'actors');\r\n        const q = query(actorsRef, where('custom', '==', false));\r\n        const actorsSnapshot = await getDocs(q);\r\n        const actorsList = actorsSnapshot.docs.map((doc) => doc.data());\r\n        let refsList: any[] = [];\r\n\r\n        if (user !== false) {\r\n          const userRef = doc(database, 'users', user.uid);\r\n          const userSnapshot = await getDoc(userRef);\r\n          const customActorRefsList = userSnapshot.get('actors');\r\n          const customActorList = await Promise.all(\r\n            customActorRefsList.map(async (actorRef) => {\r\n              try {\r\n                const actor = await getActorFromRef(actorRef.path);\r\n                return {\r\n                  ...actor,\r\n                };\r\n              } catch (err) {\r\n                console.log(err);\r\n              }\r\n            })\r\n          );\r\n          refsList = actorsList.concat(customActorList);\r\n        } else {\r\n          refsList = actorsList.slice();\r\n        }\r\n        const actorsIdList = refsList.map((actor, idx) =>\r\n          Object.defineProperty(actor, 'id', { value: idx })\r\n        );\r\n\r\n        setLoading(false);\r\n        setActors(actorsIdList);\r\n        return refsList;\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n        setError(true);\r\n      }\r\n    };\r\n    fetchActors();\r\n  }, [setError, setLoading, setActors, user]);\r\n\r\n  return { error, loading, actors };\r\n};\r\n\r\nexport const useScenario = () => {\r\n  const { user } = UseAuth();\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [scenario, setScenario] = useState<any[]>([]);\r\n  const [scenarioName, setScenarioName] = useState<string>('skeletons');\r\n\r\n  const updateScenarioName = (scenarioName) => {\r\n    setScenarioName(scenarioName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchScenario = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const docRef = doc(database, 'scenarios', scenarioName);\r\n        const scenarioSnapshot = await getDoc(docRef);\r\n        const scenarioActorRefsList = scenarioSnapshot.get('actors');\r\n        let actorRefsList;\r\n\r\n        if (user !== false) {\r\n          const userRef = doc(database, 'users', user.uid);\r\n          const userSnapshot = await getDoc(userRef);\r\n          const partyRefList = userSnapshot.get('party');\r\n          actorRefsList = partyRefList.concat(scenarioActorRefsList);\r\n        } else {\r\n          actorRefsList = scenarioActorRefsList.slice();\r\n        }\r\n\r\n        const actorList = await Promise.all(\r\n          actorRefsList.map(async (actorRef, idx) => {\r\n            try {\r\n              const actor = await getActorFromRef(actorRef.path);\r\n              return {\r\n                ...actor,\r\n                id: idx,\r\n              };\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          })\r\n        );\r\n\r\n        setScenario(actorList);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(true);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchScenario();\r\n  }, [scenarioName, user]);\r\n\r\n  return { error, loading, scenario, updateScenarioName, setScenario };\r\n};\r\n\r\nexport const useUsers = () => {\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState<DocumentData[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const usersCol = collection(database, 'users');\r\n        const usersSnapshot = await getDocs(usersCol);\r\n        const usersList = usersSnapshot.docs.map((doc) => doc.data());\r\n        const usersIdList = usersList.map((actor, index) => ({\r\n          ...actor,\r\n          id: index,\r\n        }));\r\n        // console.log(usersIdList);\r\n        setLoading(false);\r\n        setUsers(usersIdList);\r\n        return usersIdList;\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n        setError(true);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, [setError, setLoading, setUsers]);\r\n\r\n  return { error, loading, users };\r\n};\r\n\r\nexport const useCustomActors = () => {\r\n  const { user } = UseAuth();\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [changeMade, setChangeMade] = useState(false);\r\n  const [customActors, setCustomActors] = useState<any[]>([]);\r\n  // const [snapshot, setSnapshot] = useState<any>();\r\n\r\n  console.log('Rerender hook: useCustomActors()');\r\n  useEffect(() => {\r\n    const fetchActors = async () => {\r\n      console.log('fetchActors() Called');\r\n      setLoading(true);\r\n      try {\r\n        if (user === false) {\r\n          return;\r\n        }\r\n        const docRef = doc(database, 'users', user.uid);\r\n        console.log(docRef);\r\n\r\n        const snapshot = await getDoc(docRef);\r\n        const customActorRefs = snapshot.get('actors');\r\n        const partyRefs = snapshot.get('party');\r\n        const actorRefsList = partyRefs.concat(customActorRefs);\r\n\r\n        console.log('useCustomActors - actorRefList: ', actorRefsList);\r\n\r\n        let actorList = await Promise.all(\r\n          actorRefsList.map(async (actorRef, idx) => {\r\n            try {\r\n              const actor = await getActorFromRef(actorRef.path);\r\n              const docName = actorRef.path.split('/')[1];\r\n              return {\r\n                ...actor,\r\n                id: idx,\r\n                doc: docName,\r\n              };\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          })\r\n        );\r\n\r\n        setCustomActors(actorList);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setLoading(false);\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    if (user) {\r\n      fetchActors();\r\n    } else {\r\n      setLoading(false);\r\n      setCustomActors([]);\r\n    }\r\n  }, [user]);\r\n\r\n  return { error, changeMade, setChangeMade, loading, customActors };\r\n};\r\n\r\nexport const useCustomScenario = () => {\r\n  const { user } = UseAuth();\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [scenario, setScenario] = useState<any[]>([]);\r\n  const [scenarioName, setScenarioName] = useState<string>('skeletons');\r\n\r\n  const updateScenarioName = (scenarioName) => {\r\n    setScenarioName(scenarioName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchScenario = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const docRef = doc(database, 'scenarios', scenarioName);\r\n        const scenarioSnapshot = await getDoc(docRef);\r\n        const actorRefsList = scenarioSnapshot.get('actors');\r\n\r\n        const actorList = await Promise.all(\r\n          actorRefsList.map(async (actorRef, idx) => {\r\n            try {\r\n              const actor = await getActorFromRef(actorRef.path);\r\n              return {\r\n                ...actor,\r\n                id: idx,\r\n                doc: actorRef.path,\r\n              };\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          })\r\n        );\r\n\r\n        setScenario(actorList);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(true);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchScenario();\r\n  }, [scenarioName]);\r\n\r\n  return { error, loading, scenario, updateScenarioName, setScenario };\r\n};\r\n\r\nexport const addActor = async (newActor, uid) => {\r\n  try {\r\n    const docRef = await addDoc(collection(database, 'actors'), newActor);\r\n    console.log('Added doc: ', docRef.id);\r\n    const userRef = doc(database, 'users', uid);\r\n\r\n    if (newActor.type === 'party') {\r\n      await updateDoc(userRef, {\r\n        party: arrayUnion(docRef),\r\n      });\r\n    } else {\r\n      await updateDoc(userRef, {\r\n        actors: arrayUnion(docRef),\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const deleteActor = async (actor, uid) => {\r\n  try {\r\n    const docRef = doc(database, 'actors', actor.doc);\r\n    console.log('actor to be deleted: ', docRef);\r\n    await deleteDoc(docRef);\r\n    const userRef = doc(database, 'users', uid);\r\n\r\n    if (actor.type === 'party') {\r\n      await updateDoc(userRef, {\r\n        party: arrayRemove(docRef),\r\n      });\r\n    } else {\r\n      await updateDoc(userRef, {\r\n        actors: arrayRemove(docRef),\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// editActor()\r\nexport const editActor = async (actor, uid) => {\r\n  try {\r\n    const docRef = doc(database, 'actors', actor.doc);\r\n    const originalActor = await getActorFromRef(docRef.path);\r\n    const userRef = doc(database, 'users', uid);\r\n    console.log('actor to be edited: ', docRef);\r\n\r\n    await updateDoc(docRef, {\r\n      name: actor.name,\r\n      ac: actor.ac,\r\n      dc: actor.dc,\r\n      hp: actor.hp,\r\n      notes: actor.notes,\r\n      type: actor.type,\r\n    });\r\n\r\n    if (actor !== undefined && originalActor !== undefined) {\r\n      if (actor.type === 'party' && originalActor.type !== 'party') {\r\n        // remove ref from actors list & add to party list\r\n        await updateDoc(userRef, {\r\n          actors: arrayRemove(docRef),\r\n        });\r\n        await updateDoc(userRef, {\r\n          party: arrayUnion(docRef),\r\n        });\r\n      } else if (actor.type !== 'party' && originalActor.type === 'party') {\r\n        // remove ref from party list & add to actors list\r\n        await updateDoc(userRef, {\r\n          party: arrayRemove(docRef),\r\n        });\r\n        await updateDoc(userRef, {\r\n          actors: arrayUnion(docRef),\r\n        });\r\n      }\r\n    }\r\n    console.log('actor successfully edited');\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Dialog,\r\n  Button,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useActors } from \"../../../../hooks/useDatabase\";\r\n\r\nexport default function ConfirmationDialog({ open, setOpen, onClose }) {\r\n  const { actors } = useActors();\r\n\r\n  const handleListItemClick = (value: any) => {\r\n    onClose(value);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Dialog open={open} fullWidth={true} maxWidth={\"xs\"} scroll=\"paper\">\r\n        <DialogTitle>\r\n          <Typography>Select Actor</Typography>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <List>\r\n            <ListItem autoFocus button onClick={() => handleListItemClick(\"custom\")}>\r\n              <ListItemText>Custom</ListItemText>\r\n            </ListItem>\r\n            {actors.map((actor) => (\r\n              <ListItem button onClick={() => handleListItemClick(actor)} key={actor.name}>\r\n                <ListItemText primary={actor.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleButtonClick}>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Tooltip, Grid, Select, MenuItem, InputLabel, useTheme, SelectChangeEvent } from \"@mui/material\";\r\nimport ConfirmationDialog from \"../Dialogs/ConfirmationDialog\";\r\n\r\nexport default function CombatSetupToolbar({\r\n  onStartCombat,\r\n  onScenarioChange,\r\n  scenarioName,\r\n  onAddActor,\r\n  onDeleteActor,\r\n  isValidSetup,\r\n}) {\r\n  const theme = useTheme();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid item container spacing={4} alignItems=\"center\">\r\n        <Grid item xs>\r\n          <InputLabel id=\"select-scenario-label\" sx={{ color: \"white\" }}>\r\n            Select Scenario\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"select-scenario-label\"\r\n            label=\"Scenario\"\r\n            value={scenarioName}\r\n            onChange={(e: SelectChangeEvent<any>) => onScenarioChange(e.target.value)}\r\n            style={{ width: \"100%\", color: \"white\", backgroundColor: `${theme.palette.secondary.main}` }}\r\n          >\r\n            <MenuItem value=\"skeletons\">Skeletons</MenuItem>\r\n            <MenuItem value=\"vampires\">Vampires</MenuItem>\r\n            <MenuItem value=\"orcs\">Orcs</MenuItem>\r\n          </Select>\r\n        </Grid>\r\n        <Grid xs sx={{ padding: \"55px 10px 0px 20px\" }}>\r\n          <Button variant=\"contained\" fullWidth onClick={() => setDialogOpen(true)}>\r\n            Add Actor\r\n          </Button>\r\n        </Grid>\r\n        <Grid xs sx={{ padding: \"55px 0px 0px 0px\" }}>\r\n          <Button variant=\"contained\" fullWidth onClick={onDeleteActor}>\r\n            Delete Actor\r\n          </Button>\r\n        </Grid>\r\n        <Grid xs sx={{ padding: \"55px 0px 0px 10px\" }}>\r\n          {isValidSetup ? (\r\n            <Button variant=\"contained\" fullWidth onClick={onStartCombat}>\r\n              Start Combat\r\n            </Button>\r\n          ) : (\r\n            <Tooltip title=\"All actors must have an initiative greater than 0.\" placement=\"top\">\r\n              <span>\r\n                <Button variant=\"contained\" fullWidth disabled>\r\n                  Start Combat\r\n                </Button>\r\n              </span>\r\n            </Tooltip>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <ConfirmationDialog open={dialogOpen} setOpen={setDialogOpen} onClose={onAddActor} />\r\n    </>\r\n  );\r\n}\r\n","import { GridColDef } from \"@mui/x-data-grid\";\r\n\r\nexport const columns: GridColDef[] = [\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"initiative\",\r\n    headerName: \"Initiative\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"hp\",\r\n    headerName: \"HP\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"ac\",\r\n    headerName: \"AC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"dc\",\r\n    headerName: \"DC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"type\",\r\n    headerName: \"type\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"notes\",\r\n    headerName: \"Notes\",\r\n    flex: 3,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n  },\r\n];\r\n","import { useStyles } from \"../../ThemeProvider\";\r\n\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { DataGrid, GridCellEditCommitParams } from \"@mui/x-data-grid\";\r\nimport { GiDiceShield } from \"react-icons/gi\";\r\nimport { columns } from \"./CombatSetupColumns\";\r\n\r\nexport default function CombatSetupDataTable({ actors, loading, onActorSelect, onCellCommit }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid item container xs={12} spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h4\">\r\n          <GiDiceShield /> Combat Setup <GiDiceShield />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <DataGrid\r\n          className={classes.dataGrid}\r\n          rows={actors}\r\n          columns={columns}\r\n          loading={loading}\r\n          onCellEditCommit={(params: GridCellEditCommitParams) => {\r\n            onCellCommit(params);\r\n          }}\r\n          onRowClick={onActorSelect}\r\n          hideFooterPagination\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { GridRowParams, GridCellEditCommitParams } from \"@mui/x-data-grid\";\r\nimport CombatSetupToolbar from \"./SetupToolbar\";\r\nimport CombatSetupDataTable from \"../../../../components/DataTables/CombatSetupDataTable\";\r\n\r\nexport default function CombatSetup({\r\n  actors,\r\n  loading,\r\n  scenarioName,\r\n  isValidSetup,\r\n  setIsValidSetup,\r\n  setSetupActors,\r\n  onScenarioChange,\r\n  onCombatStart,\r\n}) {\r\n  const [selectedActor, setSelectedActor] = useState<any>(null);\r\n\r\n  const checkValidity = (actors: any[]) => {\r\n    const found = actors.find((actor) => actor.initiative <= 0);\r\n    return !found; // will return false if there is any actor with 0 initiative\r\n  };\r\n\r\n  const handleCellCommit = (params: GridCellEditCommitParams) => {\r\n    const temp = actors.slice();\r\n    temp.forEach((value) => {\r\n      if (value.id === params.id) {\r\n        value[params.field] = params.value; // set the value of the associated field (ex. name, initiative, etc)\r\n      }\r\n    });\r\n    const isValid = checkValidity(temp);\r\n    setIsValidSetup(isValid);\r\n    setSetupActors([...temp]);\r\n  };\r\n\r\n  const handleSelectActor = (params: GridRowParams) => {\r\n    setSelectedActor(params.row);\r\n    // console.log(\"Selected actor: \", params.row);\r\n  };\r\n\r\n  const handleAddActor = (actor) => {\r\n    const maxId = Math.max.apply(\r\n      Math,\r\n      actors.map((actor) => {\r\n        return actor.id;\r\n      })\r\n    ); //find largest id in actors and add 1 so always valid\r\n    console.log(maxId, actors.length);\r\n\r\n    const nextId = !!actors.length ? maxId + 1 : 0; // if there are no actors, set to 0\r\n\r\n    const tempActor =\r\n      actor === \"custom\"\r\n        ? {\r\n            initiative: 0,\r\n            hp: 0,\r\n            ac: 0,\r\n            dc: 0,\r\n            name: \"\",\r\n            type: \"\",\r\n            notes: \"\",\r\n            id: nextId,\r\n          }\r\n        : {\r\n            initiative: 0,\r\n            hp: actor.hp,\r\n            ac: actor.ac,\r\n            dc: actor.dc,\r\n            name: actor.name,\r\n            type: actor.type,\r\n            notes: actor.notes,\r\n            id: nextId,\r\n          };\r\n\r\n    setSetupActors([...actors, tempActor]);\r\n    console.log(\"After add: \", [...actors, tempActor]);\r\n  };\r\n\r\n  const handleDeleteActor = () => {\r\n    if (selectedActor) {\r\n      // set actors to new array with the selected actor filtered out\r\n      const temp = actors.filter((actor) => {\r\n        return actor.id !== selectedActor.id;\r\n      });\r\n      setSetupActors([...temp]);\r\n      console.log(\"After delete: \", [...temp]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CombatSetupDataTable\r\n        actors={actors}\r\n        loading={loading}\r\n        onActorSelect={handleSelectActor}\r\n        onCellCommit={handleCellCommit}\r\n      />\r\n      <CombatSetupToolbar\r\n        onStartCombat={onCombatStart}\r\n        onScenarioChange={onScenarioChange}\r\n        scenarioName={scenarioName}\r\n        onAddActor={handleAddActor}\r\n        onDeleteActor={handleDeleteActor}\r\n        isValidSetup={isValidSetup}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Button, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText } from \"@mui/material\";\r\n\r\nexport default function AlertDialog({ title, dialog, open, setOpen, continueClicked }) {\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{dialog}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={continueClicked}>\r\n            Continue\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Exit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Button, Typography, Grid, Tooltip } from \"@mui/material\";\r\nimport AlertDialog from \"../Dialogs/AlertDialog\";\r\nimport ConfirmationDialog from \"../Dialogs/ConfirmationDialog\";\r\n\r\nexport default function CombatToolbar({\r\n  onBackClicked,\r\n  currentTurnName,\r\n  roundNum,\r\n  turnIndex,\r\n  endTurn,\r\n  onAddActor,\r\n  onDeleteActor,\r\n  isValidCombat,\r\n}) {\r\n  const [backDialogOpen, setBackDialogOpen] = useState(false);\r\n  const [actorDialogOpen, setActorDialogOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid item container>\r\n        <Grid item container spacing={4}>\r\n          <Grid item container spacing={4}>\r\n            <Grid container item xs={2} textAlign=\"start\">\r\n              <Typography variant=\"h5\">Current Turn:</Typography>\r\n            </Grid>\r\n            <Grid container item xs={2} textAlign=\"start\">\r\n              <Typography variant=\"h5\">{`${currentTurnName}`}</Typography>\r\n            </Grid>\r\n            <Grid container item xs justifyContent=\"flex-end\">\r\n              <Typography variant=\"h5\">{`Round: ${roundNum}`}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Button variant=\"contained\" fullWidth onClick={() => setBackDialogOpen(true)}>\r\n              Back\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs>\r\n            {turnIndex === 0 ? (\r\n              <Button variant=\"contained\" fullWidth onClick={() => setActorDialogOpen(true)}>\r\n                Add Actor\r\n              </Button>\r\n            ) : (\r\n              <Tooltip title=\"You may only add actors ad the beginning of the round.\" placement=\"top\">\r\n                <span>\r\n                  <Button variant=\"contained\" fullWidth disabled>\r\n                    Add Actor\r\n                  </Button>\r\n                </span>\r\n              </Tooltip>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Button variant=\"contained\" fullWidth onClick={onDeleteActor}>\r\n              Delete Actor\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs>\r\n            {isValidCombat ? (\r\n              <Button variant=\"contained\" color=\"secondary\" fullWidth onClick={endTurn}>\r\n                End Turn\r\n              </Button>\r\n            ) : (\r\n              <Tooltip title=\"All actors must have an initiative greater than 0.\" placement=\"top\">\r\n                <span>\r\n                  <Button variant=\"contained\" color=\"secondary\" fullWidth disabled>\r\n                    End Turn\r\n                  </Button>\r\n                </span>\r\n              </Tooltip>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <AlertDialog\r\n        title=\"Warning\"\r\n        dialog=\"You will lose combat. Do you want to proceed?\"\r\n        open={backDialogOpen}\r\n        setOpen={setBackDialogOpen}\r\n        continueClicked={onBackClicked}\r\n      />\r\n      <ConfirmationDialog open={actorDialogOpen} setOpen={setActorDialogOpen} onClose={onAddActor} />\r\n    </>\r\n  );\r\n}\r\n","import { GridColDef } from \"@mui/x-data-grid\";\r\n// import { renderSpinner } from \"../../views/Combat/Combat\";\r\n\r\nexport const columns: GridColDef[] = [\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"initiative\",\r\n    headerName: \"Initiative\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"hp\",\r\n    headerName: \"HP\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    type: \"number\",\r\n    // renderCell: renderSpinner,\r\n  },\r\n  {\r\n    field: \"ac\",\r\n    headerName: \"AC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    // renderCell: renderSpinner,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"dc\",\r\n    headerName: \"DC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n    // renderCell: renderSpinner,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"type\",\r\n    headerName: \"type\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n  },\r\n  {\r\n    field: \"notes\",\r\n    headerName: \"Notes\",\r\n    flex: 3,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n    sortable: false,\r\n  },\r\n];\r\n","import { useState } from \"react\";\r\nimport { useStyles } from \"../../ThemeProvider\";\r\n\r\nimport { DataGrid, GridSortModel, GridRowId } from \"@mui/x-data-grid\";\r\nimport { GiAxeSword } from \"react-icons/gi\";\r\nimport { columns } from \"./CombatColumns\";\r\nimport { Grid, Typography, ClickAwayListener } from \"@mui/material\";\r\n\r\nexport default function CombatDataTable({ actors, turnId, onActorSelect, onCellCommit }) {\r\n  const classes = useStyles();\r\n  const [selectionModel, setSelectionModel] = useState<GridRowId[]>([]);\r\n  const [sortModel, setSortModel] = useState<GridSortModel>([\r\n    {\r\n      field: \"initiative\",\r\n      sort: \"desc\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h4\">\r\n          <GiAxeSword /> Combat <GiAxeSword />\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <ClickAwayListener onClickAway={() => setSelectionModel([])}>\r\n          <DataGrid\r\n            className={classes.dataGrid}\r\n            rows={actors}\r\n            columns={columns}\r\n            // sortModel={sortModel}\r\n            hideFooterPagination\r\n            onCellEditCommit={onCellCommit}\r\n            getRowClassName={(rowId) => {\r\n              return `rowTheme-selected-${rowId.id === turnId}`;\r\n            }}\r\n            onRowClick={onActorSelect}\r\n            selectionModel={selectionModel}\r\n            onSelectionModelChange={(selectionModel) => setSelectionModel(selectionModel)}\r\n          />\r\n        </ClickAwayListener>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { GridRowParams, GridCellEditCommitParams } from \"@mui/x-data-grid\";\r\nimport CombatToolbar from \"./CombatToolbar\";\r\nimport CombatDataTable from \"../../../../components/DataTables/CombatDataTable\";\r\n\r\nexport default function CombatStart({ actors, setCombatActors, onCombatEnd }) {\r\n  const [selectedActor, setSelectedActor] = useState<any>(null);\r\n  const [roundNum, setRoundNum] = useState(1);\r\n  const [turnIndex, setTurnIndex] = useState(0);\r\n  const [currTurnName, setCurrTurnName] = useState<string>(actors[0].name);\r\n  const [currTurnId, setCurrTurnId] = useState(actors[0].id);\r\n  const [isValidCombat, setIsValidCombat] = useState(true);\r\n\r\n  const checkValidity = (actors: any[]) => {\r\n    const found = actors.find((actor) => actor.initiative <= 0);\r\n    return !found; // will return false if there is any actor with 0 initiative\r\n  };\r\n\r\n  const handleCellCommit = (params: GridCellEditCommitParams) => {\r\n    const temp = actors.slice();\r\n    temp.forEach((value) => {\r\n      if (value.id === params.id) {\r\n        value[params.field] = params.value; // set the value of the associated field (ex. name, initiative, etc)\r\n      }\r\n    });\r\n    const isValid = checkValidity(temp);\r\n    const sortedActors = [...temp].sort((a, b) => b.initiative - a.initiative);\r\n    setIsValidCombat(isValid);\r\n    setCombatActors(sortedActors);\r\n\r\n    // set turn index after actor change\r\n    const updatedIndex = sortedActors.findIndex((actor) => actor.id === currTurnId);\r\n    setTurnIndex(updatedIndex);\r\n  };\r\n\r\n  const handleSelectActor = (params: GridRowParams) => {\r\n    setSelectedActor(params.row);\r\n  };\r\n\r\n  const handleAddActor = (actor) => {\r\n    const maxId = Math.max.apply(\r\n      Math,\r\n      actors.map((actor) => {\r\n        return actor.id;\r\n      })\r\n    ); //find largest id in actors and add 1 so always valid\r\n    console.log(maxId, actors.length);\r\n\r\n    const nextId = !!actors.length ? maxId + 1 : 0; // if there are no actors, set to 0\r\n\r\n    const tempActor =\r\n      actor === \"custom\"\r\n        ? {\r\n            initiative: 0,\r\n            hp: 0,\r\n            ac: 0,\r\n            dc: 0,\r\n            name: \"\",\r\n            type: \"\",\r\n            notes: \"\",\r\n            id: nextId,\r\n          }\r\n        : {\r\n            initiative: 0,\r\n            hp: actor.hp,\r\n            ac: actor.ac,\r\n            dc: actor.dc,\r\n            name: actor.name,\r\n            type: actor.type,\r\n            notes: actor.notes,\r\n            id: nextId,\r\n          };\r\n\r\n    setCombatActors([...actors, tempActor]);\r\n    setIsValidCombat(false); // automatically false since actors are added with 0 Init\r\n    console.log(\r\n      \"After add: \",\r\n      [...actors, tempActor].sort((a, b) => b.initiative - a.initiative)\r\n    );\r\n  };\r\n\r\n  const handleDeleteActor = () => {\r\n    if (actors.length === 1) {\r\n      // don't allow them to delete all actors\r\n      return;\r\n    }\r\n    if (selectedActor) {\r\n      // set actors to new array with the selected actor filtered out\r\n      const temp = actors.filter((actor) => {\r\n        return actor.id !== selectedActor.id;\r\n      });\r\n      const sortedActors = [...temp].sort((a, b) => b.initiative - a.initiative);\r\n\r\n      const updatedIndex = sortedActors.findIndex((actor) => actor.id === currTurnId);\r\n\r\n      // if current turn actor wasn't deleted\r\n      if (updatedIndex > 0) {\r\n        // if any preceding actor is deleted, shift backwards\r\n        if (updatedIndex < turnIndex) {\r\n          setTurnIndex(updatedIndex);\r\n          setCurrTurnName(sortedActors[updatedIndex].name);\r\n          setCurrTurnId(sortedActors[updatedIndex].id);\r\n        }\r\n        // do nothing otherwise\r\n      }\r\n      // current turn actor was deleted\r\n      else {\r\n        if (turnIndex + 1 === actors.length) {\r\n          // if deleted actor was the last on the list\r\n          setTurnIndex(0);\r\n          setRoundNum(roundNum + 1);\r\n          setCurrTurnName(sortedActors[0].name);\r\n          setCurrTurnId(sortedActors[0].id);\r\n        }\r\n        // move turn to next actor\r\n        else {\r\n          setCurrTurnName(sortedActors[turnIndex].name);\r\n          setCurrTurnId(sortedActors[turnIndex].id);\r\n        }\r\n      }\r\n      setCombatActors(sortedActors);\r\n      setIsValidCombat(checkValidity(sortedActors));\r\n      console.log(\"After delete: \", [...temp]);\r\n    }\r\n  };\r\n\r\n  const handleTurnEnd = () => {\r\n    const nextTurnIndex = turnIndex + 1;\r\n    if (nextTurnIndex === actors.length) {\r\n      setTurnIndex(0);\r\n      setRoundNum(roundNum + 1);\r\n      setCurrTurnName(actors[0].name);\r\n      setCurrTurnId(actors[0].id);\r\n    } else {\r\n      setTurnIndex(nextTurnIndex);\r\n      setCurrTurnName(actors[nextTurnIndex].name);\r\n      setCurrTurnId(actors[nextTurnIndex].id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CombatDataTable\r\n        actors={actors}\r\n        turnId={currTurnId}\r\n        onActorSelect={handleSelectActor}\r\n        onCellCommit={handleCellCommit}\r\n      />\r\n      <CombatToolbar\r\n        onBackClicked={onCombatEnd}\r\n        currentTurnName={currTurnName}\r\n        roundNum={roundNum}\r\n        turnIndex={turnIndex}\r\n        endTurn={handleTurnEnd}\r\n        onAddActor={handleAddActor}\r\n        onDeleteActor={handleDeleteActor}\r\n        isValidCombat={isValidCombat}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useStyles } from \"../../ThemeProvider\";\r\nimport { useScenario } from \"../../hooks/useDatabase\";\r\n\r\nimport { Grid } from \"@mui/material\";\r\nimport CombatSetup from \"./components/CombatSetup/CombatSetup\";\r\nimport CombatStart from \"./components/CombatStart/CombatStart\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nexport default function Combat() {\r\n  const classes = useStyles();\r\n  const { user } = useAuth();\r\n  const { loading, scenario, updateScenarioName, setScenario } = useScenario();\r\n  const [scenarioName, setScenarioName] = useState(\"skeletons\");\r\n  const [combatStarted, setCombatStarted] = useState(false);\r\n  const [isValidSetup, setIsValidSetup] = useState(false);\r\n  const [setupActors, setSetupActors] = useState(scenario);\r\n  const [combatActors, setCombatActors] = useState(scenario);\r\n\r\n  // once scenario loads, setSetupActors to it\r\n  useEffect(() => {\r\n    setSetupActors(scenario);\r\n    setCombatActors(scenario); // set to combat as well for backup\r\n  }, [scenario, user]);\r\n\r\n  const handleScenarioChange = (scenarioName: string) => {\r\n    updateScenarioName(scenarioName);\r\n    setScenarioName(scenarioName);\r\n    setIsValidSetup(false);\r\n  };\r\n\r\n  const handleCombatStart = () => {\r\n    setCombatStarted(true);\r\n    // sort the actors for the combat phase\r\n    const temp = setupActors.slice().sort((a, b) => b.initiative - a.initiative);\r\n    setSetupActors([...temp]);\r\n    setCombatActors([...temp]);\r\n  };\r\n\r\n  const handleCombatEnd = () => {\r\n    setCombatStarted(false);\r\n    console.log(\"here\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justifyContent=\"center\" direction=\"row\" spacing={2} className={classes.grid}>\r\n        <Grid item container xs={12} spacing={3}>\r\n          {combatStarted ? (\r\n            <CombatStart actors={combatActors} setCombatActors={setCombatActors} onCombatEnd={handleCombatEnd} />\r\n          ) : (\r\n            <CombatSetup\r\n              actors={setupActors}\r\n              loading={loading}\r\n              scenarioName={scenarioName}\r\n              isValidSetup={isValidSetup} //\r\n              setIsValidSetup={setIsValidSetup} //\r\n              setSetupActors={setSetupActors}\r\n              onScenarioChange={handleScenarioChange}\r\n              onCombatStart={handleCombatStart}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { AccessibilityNew, GridView, Groups, Info } from \"@mui/icons-material\";\r\n\r\nexport interface MenuItem {\r\n  title: string;\r\n  url: string;\r\n  icon: any;\r\n}\r\n\r\nexport const MenuItems: MenuItem[] = [\r\n  {\r\n    title: \"Combat\",\r\n    url: \"/combat-track/combat\",\r\n    icon: Groups,\r\n  },\r\n  {\r\n    title: \"Edit Actors\",\r\n    url: \"/combat-track/actors\",\r\n    icon: AccessibilityNew,\r\n  },\r\n  {\r\n    title: \"Edit Scenarios\",\r\n    url: \"/combat-track/scenarios\",\r\n    icon: GridView,\r\n  },\r\n\r\n  {\r\n    title: \"About\",\r\n    url: \"/combat-track/about\",\r\n    icon: Info,\r\n  },\r\n];\r\n","import { Link } from \"react-router-dom\";\r\nimport { Drawer, Box, Divider, List, ListItem, ListItemText, ListItemIcon } from \"@mui/material\";\r\nimport { MenuItems } from \"./MenuItem\";\r\n\r\nexport default function Menu({ isOpen, handleClose }) {\r\n  return (\r\n    <Drawer anchor=\"right\" open={isOpen} onClose={handleClose}>\r\n      <Box sx={{ width: 350 }} onClick={handleClose}>\r\n        <List>\r\n          {MenuItems.map((menuItem, index) => {\r\n            return (\r\n              <ListItem button key={index} component={Link} to={menuItem.url}>\r\n                <ListItemIcon>\r\n                  <menuItem.icon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={menuItem.title} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Divider />\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Box, AppBar, Toolbar, Button, IconButton, Typography, useTheme } from \"@mui/material\";\r\nimport { Menu as MenuIcon } from \"@mui/icons-material\";\r\nimport Menu from \"./components/Menu\";\r\nimport { checkUserExists, addUser } from \"../../hooks/useDatabase\";\r\nimport { GiDiceTwentyFacesTwenty } from \"react-icons/gi\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nexport default function Navbar() {\r\n  const theme = useTheme();\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const { user, signin, signout } = useAuth();\r\n\r\n  // callback to authenticate user\r\n  const login = async () => {\r\n    try {\r\n      const user = await signin();\r\n      const exists = (await checkUserExists(user.uid)).valueOf();\r\n      if(!exists){\r\n        addUser(user);\r\n        console.log(user.displayName, \" was successfully added to users!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"There was an error logging into your google account. Try again.\");\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await signout();\r\n    } catch (error) {\r\n      console.error(\"There was an error logging out of your google account. Try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <AppBar\r\n          className=\"navbar\"\r\n          position=\"fixed\"\r\n          sx={{ backgroundColor: `${theme.palette.secondary.light}`, color: `${theme.palette.secondary.contrastText}` }}\r\n        >\r\n          <Toolbar>\r\n            <Typography variant=\"h4\" component=\"div\">\r\n              <GiDiceTwentyFacesTwenty />\r\n            </Typography>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              DnD Combat Tracker\r\n            </Typography>\r\n\r\n            {user ? (\r\n              <>\r\n                <Typography variant=\"h6\" component=\"div\" sx={{ mr: 4 }}>\r\n                  {user.isAnonymous ? `Guest` : `${user.displayName}`}\r\n                </Typography>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={logout}>\r\n                  Logout\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button variant=\"contained\" color=\"primary\" onClick={login}>\r\n                Login\r\n              </Button>\r\n            )}\r\n\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"primary\"\r\n              aria-label=\"menu\"\r\n              sx={{ ml: 2 }}\r\n              onClick={() => setMenuOpen(true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      <Menu isOpen={menuOpen} handleClose={() => setMenuOpen(false)} />\r\n      {/* <LoginModal open={modalOpen} handleClose={() => setModalOpen(false)} /> */}\r\n    </>\r\n  );\r\n}\r\n","import { GridColDef } from \"@mui/x-data-grid\";\r\n\r\n//TODO: CHANGE THIS FOR ACTOR FIELDS\r\nexport const columns: GridColDef[] = [\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"ac\",\r\n    headerName: \"AC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"dc\",\r\n    headerName: \"DC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"hp\",\r\n    headerName: \"HP\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"type\",\r\n    headerName: \"Type\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"notes\",\r\n    headerName: \"Notes\",\r\n    flex: 3,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n];\r\n","import { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { AuthContext, AuthContextProvider } from \"../../contexts/AuthContext\";\r\nimport { useActors, useCustomActors, useUsers } from \"../../hooks/useDatabase\";\r\nimport { columns } from \"./ActorsColumns\";\r\n\r\nexport default function DataTable({ classes, actors, loading, onSelect, selected }) {\r\n  return (\r\n    <div className={classes.container}>\r\n      <DataGrid\r\n        rows={actors}\r\n        columns={columns}\r\n        loading={loading}\r\n        hideFooter\r\n        className={classes.dataGrid}\r\n        onRowClick={onSelect}\r\n        getRowClassName={(rowId) => {\r\n          let theme = `rowTheme-selected-false`;\r\n          if(selected !== undefined) {\r\n            theme = `rowTheme-selected-${rowId.id === selected.id}`;\r\n          }\r\n          return theme;\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Grid } from '@mui/material';\r\nimport React from 'react';\r\n\r\nexport default function ActorToolbar({ onAddClicked, onDeleteClicked, onEditClicked, isDisabled }) {\r\n  return (\r\n      <React.Fragment>\r\n        <Grid item xs>\r\n          <Button variant=\"contained\" fullWidth onClick={onAddClicked}>\r\n            Add Actor\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button variant=\"contained\" fullWidth onClick={onEditClicked} disabled={isDisabled}>\r\n            Edit Actor\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button variant=\"contained\" fullWidth onClick={onDeleteClicked} disabled={isDisabled}>\r\n            Delete Actor\r\n          </Button>\r\n        </Grid>\r\n      </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Modal,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { addActor, useCustomActors } from '../../../hooks/useDatabase';\r\n\r\ninterface Actor {\r\n  name: string;\r\n  ac: number;\r\n  dc: number;\r\n  hp: number;\r\n  initiative: number;\r\n  notes: string;\r\n  type: string;\r\n  custom: boolean;\r\n}\r\n\r\nconst style = {\r\n  box: {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  },\r\n  textField: {\r\n    width: '100%',\r\n  },\r\n  select: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nexport default function AddActorForm({ open, setOpen, user }) {\r\n  const { changeMade, setChangeMade} = useCustomActors();\r\n  const [type, setType] = useState<string>('creature');\r\n  const [actor, setActor] = useState<Actor>({\r\n    name: '',\r\n    ac: 0,\r\n    dc: 0,\r\n    hp: 0,\r\n    initiative: 0,\r\n    notes: '',\r\n    type: 'creature',\r\n    custom: true,\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log('New Actor: ', actor);\r\n    if (user !== false) {\r\n      addActor(actor, user.uid);\r\n      changeMade? setChangeMade(false) : setChangeMade(true);\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={open}>\r\n        <Box sx={style.box}>\r\n          <form onSubmit={handleFormSubmit}>\r\n            <Grid container justifyContent=\"center\" spacing={1}>\r\n              <Grid item xs={10}>\r\n                <Typography variant=\"h5\">Actor Form</Typography>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  required\r\n                  label=\"Name\"\r\n                  sx={style.textField}\r\n                  onChange={(e) => {\r\n                    let temp = actor;\r\n                    temp.name = e.target.value;\r\n                    setActor(temp);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  required\r\n                  label=\"ac\"\r\n                  type=\"number\"\r\n                  sx={style.textField}\r\n                  onChange={(e) => {\r\n                    let temp = actor;\r\n                    temp.ac = parseInt(e.target.value);\r\n                    setActor(temp);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  required\r\n                  label=\"dc\"\r\n                  type=\"number\"\r\n                  sx={style.textField}\r\n                  onChange={(e) => {\r\n                    let temp = actor;\r\n                    temp.dc = parseInt(e.target.value);\r\n                    setActor(temp);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  required\r\n                  label=\"hp\"\r\n                  type=\"number\"\r\n                  sx={style.textField}\r\n                  onChange={(e) => {\r\n                    let temp = actor;\r\n                    temp.hp = parseInt(e.target.value);\r\n                    setActor(temp);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <TextField\r\n                  label=\"Notes\"\r\n                  sx={style.textField}\r\n                  onChange={(e) => {\r\n                    let temp = actor;\r\n                    temp.notes = e.target.value;\r\n                    setActor(temp);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <Select\r\n                  label=\"Type\"\r\n                  value={type}\r\n                  sx={style.select}\r\n                  onChange={(e) => {\r\n                    let temp = actor;\r\n                    temp.type = e.target.value;\r\n                    setActor(temp);\r\n                    setType(e.target.value);\r\n                  }}\r\n                >\r\n                  <MenuItem value={'creature'}>Creature</MenuItem>\r\n                  <MenuItem value={'companion'}>Companion</MenuItem>\r\n                  <MenuItem value={'effect'}>Effect</MenuItem>\r\n                  <MenuItem value={'party'}>Party</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <Button variant=\"contained\" type=\"submit\" sx={style.button}>\r\n                  Add\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={5}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={handleClose}\r\n                  sx={style.button}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    MenuItem,\r\n    Modal,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n  } from '@mui/material';\r\n  import React, { useState } from 'react';\r\n  import { editActor, useCustomActors } from '../../../hooks/useDatabase';\r\n  \r\n  interface Actor {\r\n    name: string;\r\n    ac: number;\r\n    dc: number;\r\n    hp: number;\r\n    initiative: number;\r\n    notes: string;\r\n    type: string;\r\n    custom: boolean;\r\n  }\r\n  \r\n  const style = {\r\n    box: {\r\n      position: 'absolute' as 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      width: 400,\r\n      bgcolor: 'background.paper',\r\n      border: '2px solid #000',\r\n      boxShadow: 24,\r\n      p: 4,\r\n    },\r\n    textField: {\r\n      width: '100%',\r\n    },\r\n    select: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      width: '100%',\r\n    },\r\n  };\r\n  \r\n  export default function EditActorForm({ open, setOpen, actor, user }) {\r\n    const [editedActor, setEditedActor] = useState<Actor>(actor);\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    const handleFormSubmit = (event) => {\r\n      event.preventDefault();\r\n      console.log('New Actor: ', actor);\r\n      editActor(editedActor, user.uid);\r\n      handleClose();\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Modal open={open}>\r\n          <Box sx={style.box}>\r\n            <form onSubmit={handleFormSubmit}>\r\n              <Grid container justifyContent=\"center\" spacing={1}>\r\n                <Grid item xs={10}>\r\n                  <Typography variant=\"h5\">Actor Form</Typography>\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <TextField\r\n                    required\r\n                    label=\"Name\"\r\n                    defaultValue={editedActor.name}\r\n                    sx={style.textField}\r\n                    onChange={(e) => {\r\n                      let temp = actor;\r\n                      temp.name = e.target.value;\r\n                      setEditedActor(temp);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <TextField\r\n                    required\r\n                    label=\"ac\"\r\n                    type=\"number\"\r\n                    defaultValue={editedActor.ac}\r\n                    sx={style.textField}\r\n                    onChange={(e) => {\r\n                      let temp = actor;\r\n                      temp.ac = parseInt(e.target.value);\r\n                      setEditedActor(temp);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <TextField\r\n                    required\r\n                    label=\"dc\"\r\n                    type=\"number\"\r\n                    defaultValue={editedActor.dc}\r\n                    sx={style.textField}\r\n                    onChange={(e) => {\r\n                      let temp = actor;\r\n                      temp.dc = parseInt(e.target.value);\r\n                      setEditedActor(temp);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <TextField\r\n                    required\r\n                    label=\"hp\"\r\n                    type=\"number\"\r\n                    defaultValue={editedActor.hp}\r\n                    sx={style.textField}\r\n                    onChange={(e) => {\r\n                      let temp = actor;\r\n                      temp.hp = parseInt(e.target.value);\r\n                      setEditedActor(temp);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <TextField\r\n                    label=\"Notes\"\r\n                    sx={style.textField}\r\n                    defaultValue={editedActor.notes}\r\n                    onChange={(e) => {\r\n                      let temp = actor;\r\n                      temp.notes = e.target.value;\r\n                      setEditedActor(temp);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={10}>\r\n                  <Select\r\n                    label=\"Type\"\r\n                    defaultValue={editedActor.type}\r\n                    sx={style.select}\r\n                    onChange={(e) => {\r\n                      let temp = actor;\r\n                      temp.type = e.target.value;\r\n                      setEditedActor(temp);\r\n                    }}\r\n                  >\r\n                    <MenuItem value={'creature'}>Creature</MenuItem>\r\n                    <MenuItem value={'companion'}>Companion</MenuItem>\r\n                    <MenuItem value={'effect'}>Effect</MenuItem>\r\n                    <MenuItem value={'party'}>Party</MenuItem>\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <Button variant=\"contained\" type=\"submit\" sx={style.button}>\r\n                    Add\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleClose}\r\n                    sx={style.button}\r\n                  >\r\n                    Close\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n  ","import { Typography, Button, Grid } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { checkUserExists, addUser } from \"../hooks/useDatabase\";\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    message: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n    },\r\n  };\r\n});\r\n\r\nexport default function LoginMessage({ isActors }) {\r\n  const classes = useStyles();\r\n  const { signin } = useAuth();\r\n\r\n  const login = async () => {\r\n    try {\r\n      const user = await signin();\r\n      const exists = (await checkUserExists(user.uid)).valueOf();\r\n      if (!exists) {\r\n        addUser(user);\r\n        console.log(user.displayName, \" was successfully added to users!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"There was an error logging into your google account. Try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.message}>\r\n      <Grid container justifyContent=\"center\" direction=\"column\" spacing={2}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">{`Please log in to access your custom ${\r\n            isActors ? `actors` : `scenarios`\r\n          }`}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={login}>\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport DataTable from \"../../components/DataTables/ActorsDataTable\";\r\nimport ActorToolbar from \"./components/ActorToolbar\";\r\nimport { useStyles } from \"../../ThemeProvider\";\r\nimport AddActorForm from \"./components/AddActorForm\";\r\nimport EditActorForm from \"./components/EditActorForm\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { useCustomActors, deleteActor } from \"../../hooks/useDatabase\";\r\nimport AlertDialog from \"../Combat/components/Dialogs/AlertDialog\";\r\nimport { GridRowParams, MuiEvent, GridCallbackDetails } from \"@mui/x-data-grid\";\r\nimport LoginMessage from \"../../components/LoginMessage\";\r\n\r\nexport default function EditActors() {\r\n  console.log(\"Rerender: EditActors()\");\r\n  const classes = useStyles();\r\n  const { user } = useAuth();\r\n  const { loading, customActors } = useCustomActors();\r\n  const [selectedActor, setSelectedActor] = useState<any>(undefined);\r\n  const [addTriggered, setAddTriggered] = useState<boolean>(false);\r\n  const [editTriggered, setEditTriggered] = useState<boolean>(false);\r\n  const [buttonDisabled, setButtonDisabled] = useState<boolean>(true);\r\n  const [alertTriggered, setAlertTriggered] = useState<boolean>(false);\r\n  const [refresh, setRefresh] = useState(0);\r\n\r\n  const handleAddClicked = () => {\r\n    setAddTriggered(true);\r\n  };\r\n\r\n  const handleEditClicked = () => {\r\n    console.log(\"edit clicked\");\r\n    setEditTriggered(true);\r\n  };\r\n\r\n  const handleDeleteClicked = () => {\r\n    setAlertTriggered(true);\r\n  };\r\n\r\n  const handleDeleteActor = () => {\r\n    if (user !== false) {\r\n      deleteActor(selectedActor, user.uid);\r\n    }\r\n    setAlertTriggered(false);\r\n    setRefresh(refresh + 1);\r\n  };\r\n\r\n  const handleSelectActor = (\r\n    params: GridRowParams,\r\n    event: MuiEvent<React.SyntheticEvent>,\r\n    details: GridCallbackDetails\r\n  ) => {\r\n    if (selectedActor === undefined) {\r\n      setSelectedActor(params.row);\r\n      setButtonDisabled(false);\r\n    } else if (params.id === selectedActor.id) {\r\n      setSelectedActor(undefined);\r\n      setButtonDisabled(true);\r\n    } else {\r\n      setSelectedActor(params.row);\r\n    }\r\n  };\r\n\r\n  const renderAddActorForm = (\r\n    <React.Fragment>\r\n      <AddActorForm open={addTriggered} setOpen={setAddTriggered} user={user} />\r\n    </React.Fragment>\r\n  );\r\n\r\n  const renderEditActorForm = (\r\n    <React.Fragment>\r\n      <EditActorForm open={editTriggered} setOpen={setEditTriggered} actor={selectedActor} user={user} />\r\n    </React.Fragment>\r\n  );\r\n\r\n  const renderAlert = (\r\n    <React.Fragment>\r\n      <AlertDialog\r\n        title=\"Confirm Delete\"\r\n        dialog=\"Are you sure you want to delete this actor?\"\r\n        open={alertTriggered}\r\n        setOpen={setAlertTriggered}\r\n        continueClicked={handleDeleteActor}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(\"EditActors -> useEffect()\");\r\n  }, [user, customActors, buttonDisabled, refresh]); // useEffect for combat events\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {user ? (\r\n        <Grid container justifyContent=\"center\" direction=\"row\" spacing={2}>\r\n          <Typography variant=\"h4\">Actor Editor</Typography>\r\n          <Grid item xs={12}>\r\n            <DataTable\r\n              classes={classes}\r\n              actors={customActors}\r\n              loading={loading}\r\n              onSelect={handleSelectActor}\r\n              selected={selectedActor}\r\n            />\r\n          </Grid>\r\n          <ActorToolbar\r\n            onAddClicked={handleAddClicked}\r\n            onDeleteClicked={handleDeleteClicked}\r\n            onEditClicked={handleEditClicked}\r\n            isDisabled={buttonDisabled}\r\n          />\r\n          {addTriggered && renderAddActorForm}\r\n          {editTriggered && renderEditActorForm}\r\n          {alertTriggered && renderAlert}\r\n        </Grid>\r\n      ) : (\r\n        <LoginMessage isActors={true} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { GridColDef } from \"@mui/x-data-grid\";\r\n\r\n//TODO: CHANGE THIS FOR ACTOR COLUMNS\r\nexport const columns: GridColDef[] = [\r\n  {\r\n    field: \"ac\",\r\n    headerName: \"AC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"dc\",\r\n    headerName: \"DC\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"hp\",\r\n    headerName: \"HP\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"initiative\",\r\n    headerName: \"Initiative\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Name\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"notes\",\r\n    headerName: \"Notes\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n  {\r\n    field: \"type\",\r\n    headerName: \"type\",\r\n    flex: 1,\r\n    headerClassName: \"col-header\",\r\n    editable: true,\r\n  },\r\n];\r\n","import { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useActors, useUsers } from \"../../hooks/useDatabase\";\r\nimport { columns } from \"./ScenariosColumns\";\r\n\r\nexport default function DataTable({ classes }) {\r\n  const { error, loading, actors } = useActors();\r\n  const { users } = useUsers();\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <DataGrid rows={actors} columns={columns} hideFooterPagination className={classes.dataGrid} />\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Grid, MenuItem, Select } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useState } from \"react\";\r\nimport { getListOfCustomScenarios } from '../../../hooks/useDatabase'; \r\n\r\nconst useStyles = makeStyles({\r\n  select: {\r\n    width: '100%',\r\n    color: 'white',\r\n  },\r\n  button: {\r\n    height: '100%',\r\n  },\r\n});\r\n\r\nexport default function ScenarioToolbar() {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <Grid item container spacing={6}>\r\n      <Grid item xs>\r\n        <Select value='prompt' className={classes.select}>\r\n          <MenuItem value='prompt'>Select Scenario</MenuItem>\r\n          <MenuItem value='custom'>Custom</MenuItem>\r\n          <MenuItem value='sample1'>sample1</MenuItem>\r\n          <MenuItem value='sample2'>sample2</MenuItem>\r\n        </Select>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Button variant='contained' fullWidth className={classes.button}>\r\n          Add Actor\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs>\r\n        <Button variant='contained' fullWidth className={classes.button}>\r\n          Delete Actor\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Grid, Typography } from \"@mui/material\";\r\nimport DataTable from \"../../components/DataTables/ScenariosDataTable\";\r\nimport ScenarioToolbar from \"./components/ScenarioToolbar\";\r\nimport { useStyles } from \"../../ThemeProvider\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport LoginMessage from \"../../components/LoginMessage\";\r\n\r\nexport default function EditActors() {\r\n  const classes = useStyles();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {user ? (\r\n        <Grid container justifyContent=\"center\" direction=\"row\" spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\">Scenario Editor</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <DataTable classes={classes} />\r\n          </Grid>\r\n          <ScenarioToolbar />\r\n        </Grid>\r\n      ) : (\r\n        <LoginMessage isActors={false} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport Combat from './views/Combat/Combat';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport EditActors from './views/EditActor/EditActors';\r\nimport EditScenarios from './views/EditScenarios/EditScenarios';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Route path='/combat-track/'>\r\n        <Redirect to='/combat-track/combat' />\r\n      </Route>\r\n      <Route path='/combat-track/combat'>\r\n        <Combat />\r\n      </Route>\r\n      <Route path='/combat-track/actors'>\r\n        <EditActors />\r\n      </Route>\r\n      <Route path='/combat-track/scenarios'>\r\n        <EditScenarios />\r\n      </Route>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider } from \"@mui/material\";\r\nimport theme from \"./ThemeProvider\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { AuthContextProvider } from \"./contexts/AuthContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}